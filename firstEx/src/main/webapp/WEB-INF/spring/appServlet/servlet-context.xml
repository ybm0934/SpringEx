<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- WEB-INF가 아닌 resources 폴더를 읽는 것 가능 -->
	<resources mapping="/js/**" location="/js/"/>

	<!-- ViewResolver -->
	<!-- /WEB-INF/views/ + 파일명 + .jsp -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- DataSource -->
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@192.168.6.166:1521:orcl"/>
		<beans:property name="username" value="herb"/>
		<beans:property name="password" value="herb123"/>
	</beans:bean>
	
	<!-- 트랜잭션 관리자 -->
	<beans:bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- 마이바티스 설정 -->
	<beans:bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="typeAliasesPackage" value="com.pd.model"/>
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation" value="classpath:/mybatis-config.xml"/>
		<beans:property name="mapperLocations">
			<beans:array>
				<beans:value>classpath*:/com/mybatis/mapper/**/*.xml</beans:value>
			</beans:array>
		</beans:property>
	</beans:bean>
	
	<!-- AutoWired 사용 시 실행 됨 -->
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean" />
	</beans:bean>
	
<!-- 
	typeAliasesPackage
	: mybatis에서 resultType과 parameterType 사용시 bean 객체를 사용할려면 패키지 경로 및 bean 클래스명까지 입력해야 한다.
	하지만 typeAliases 처리를 해주면 bean 클래스명만 입력하면 되므로 조금 간소해진다.
	ex) MemberBean 을 사용할 경우 com.test.web.member.bean.MemberBean -=> memberBean
	
	configLocation
	: 마이바티스 작동 규칙 정의가 있는 XML 파일의 경로를 설정한다. 
-->
	
	<!-- Annotation 을 사용한 트랜잭션 사용시 활성화 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 웹 실행 시 가장 먼저 scan하는 패키지 -->
	<context:component-scan base-package="com.pd" />
	
</beans:beans>
